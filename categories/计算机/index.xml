<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>计算机 on PPD&#39;s blog</title>
    <link>https://ppd0705.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/</link>
    <description>Recent content in 计算机 on PPD&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 29 Nov 2023 18:51:08 +0800</lastBuildDate><atom:link href="https://ppd0705.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[笔记]C&#43;&#43;之旅</title>
      <link>https://ppd0705.github.io/post/cpp_tour/</link>
      <pubDate>Wed, 29 Nov 2023 18:51:08 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/cpp_tour/</guid>
      <description>第一章 基础 hello world 示例 1 2 3 4 5 import std; int main() { std::cout &amp;lt;&amp;lt; &amp;#34;Hello, World!\n&amp;#34;; } 函数 函数声明包含名称、参数和返回值，返回值在名称之前。 函数的类型由他的返回值类型和参数类型序</description>
    </item>
    
    <item>
      <title>[笔记]数据结构和算法之美（更新中）</title>
      <link>https://ppd0705.github.io/post/algo_beauty/</link>
      <pubDate>Thu, 29 Jun 2023 07:21:46 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/algo_beauty/</guid>
      <description>第二讲 十个重点数据结构 数组 链表 栈 队列 散列表 二叉树 堆 跳表 图 Trie 树 十个重点算法 递归 排序 二分查找 搜索 哈希 贪心 分治 回溯 动态规划 字符串匹配 第三讲 复杂度分</description>
    </item>
    
    <item>
      <title>NATS 学习笔记</title>
      <link>https://ppd0705.github.io/post/nats_note/</link>
      <pubDate>Thu, 01 Jun 2023 08:31:17 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/nats_note/</guid>
      <description>Quality of Service (QoS) At most once Core NATS is a fire-and-forget messaging system. It will only hold messages in memory. If a subscriber is not listening on the subject, or is not active when the message is sent, the message is not received. At least/ exactly once JetStream support higher qualities of service (at least once and exactly once) Subject-based Messaging 消息基于 Subject 匹配和</description>
    </item>
    
    <item>
      <title>迁移Python项目到Golang</title>
      <link>https://ppd0705.github.io/post/migrate_python_project_to_go/</link>
      <pubDate>Fri, 12 May 2023 07:40:27 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/migrate_python_project_to_go/</guid>
      <description>前言 最近在用 Golang 重构一个 Python web 项目，之前后端主要的技术栈是 flask+sqlalchemy+celery，综合现有情况， 我选择了使用 gin+gorm+cron 来做相应替</description>
    </item>
    
    <item>
      <title>nats丢消息排查小记</title>
      <link>https://ppd0705.github.io/post/debug_nats_message_losing/</link>
      <pubDate>Tue, 13 Dec 2022 09:24:20 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/debug_nats_message_losing/</guid>
      <description>背景 最近我们把消息队列从 kafka 迁移到 nats, 主要原因是kafka的延迟不能忍受，5ms 其实也不小了，但在几千上万个 topic 的情况下，延迟有时会上升至数百 ms</description>
    </item>
    
    <item>
      <title>[笔记]k8s入门</title>
      <link>https://ppd0705.github.io/post/getting_started_with_k8s/</link>
      <pubDate>Sun, 24 Jul 2022 10:50:35 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/getting_started_with_k8s/</guid>
      <description>第零讲 环境准备 使用 virtualbox 安装 ubuntu 虚拟环境 个人采坑记录 共享粘贴板设置 配置了双向粘贴版 和 安装 apt install virtualbox-guest-utils 还是不行， 每次得手动启动 VBoxClient --clipborad. 通过 df -h 查看目录找到 挂载</description>
    </item>
    
    <item>
      <title>[笔记]Kafka 核心技术与实战</title>
      <link>https://ppd0705.github.io/post/kafka_in_action/</link>
      <pubDate>Wed, 29 Jun 2022 08:20:51 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/kafka_in_action/</guid>
      <description>第一讲 消息系统 ABC 定义 维基百科版: 消息系统是一组规范，利用这组规范在不同系统之间传递语义准确的消息，实现松耦合的异步数据传递。 传输模型 点对点 发</description>
    </item>
    
    <item>
      <title>supervisor 源码解读</title>
      <link>https://ppd0705.github.io/post/learn_supervisor/</link>
      <pubDate>Sun, 27 Mar 2022 21:21:20 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/learn_supervisor/</guid>
      <description>简介 Supervisor is a client/server system that allows its users to control a number of processes on UNIX-like operating systems. 当前最新版本为 4.2.4，发布于 2021-12-30 第一个发布版本为 1.0.3，发布于 2004-05-26 主要模块 supervisorctl supervisorctl 是个命令行客户端</description>
    </item>
    
    <item>
      <title>[笔记]业务开发算法 50 讲</title>
      <link>https://ppd0705.github.io/post/algo_in_action/</link>
      <pubDate>Mon, 14 Mar 2022 08:36:33 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/algo_in_action/</guid>
      <description>第零讲 git diff 文本差分算法 定义 git diff 内置了多种算法 ，这里介绍的是其默认算法 Myers 差分算法。 An edit script for A and B is a set of insertion and deletion commands that transform A into B. 文本差分算法可以定义</description>
    </item>
    
    <item>
      <title>[笔记]深入C语言和程序运行原理</title>
      <link>https://ppd0705.github.io/post/learn_c/</link>
      <pubDate>Mon, 31 Jan 2022 17:04:50 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/learn_c/</guid>
      <description>第零讲 课前热身 数据量单位 位（bit）： 是最小存储单位，每个位可以存一个二进制码值得 0 或 1 字节（byte）： 通常是由八个位组成的一个存储单元，</description>
    </item>
    
    <item>
      <title>非典型 NOIP 经历</title>
      <link>https://ppd0705.github.io/post/noip_expirence/</link>
      <pubDate>Sun, 21 Nov 2021 11:09:55 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/noip_expirence/</guid>
      <description>TL;DR: 愉快地在机房划水2年，没有拿到高考加分。 看到有人发文说 Pascal 正式退出赛事舞台，不禁想写一下脑海残存的高中参赛经历。 高中以前，可以说我在学校过的</description>
    </item>
    
    <item>
      <title>[笔记]操作系统实战</title>
      <link>https://ppd0705.github.io/post/play_os_in_action/</link>
      <pubDate>Fri, 30 Jul 2021 08:06:33 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/play_os_in_action/</guid>
      <description>第一讲: 程序的运行过程 程序的编译过程 预处理：加入头文件，替换宏 gcc HelloWorld.c -o HelloWorld.i 编译：包含预处理，将C程序转成成汇编程序 gcc HelloWorld.c -S -c Helloworld.s 汇编：包含预处理和汇</description>
    </item>
    
    <item>
      <title>[笔记]Go项目开发实战</title>
      <link>https://ppd0705.github.io/post/go_develop_in_action/</link>
      <pubDate>Mon, 28 Jun 2021 07:28:37 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/go_develop_in_action/</guid>
      <description>第一讲 开源规范 开源协议概述 MIT是相对自由开发的协议 第二讲 文档规范 最重要的三类文档：README文档、项目文档和API文档 README规范 主</description>
    </item>
    
    <item>
      <title>[笔记]VueJS学习</title>
      <link>https://ppd0705.github.io/post/learning_vue/</link>
      <pubDate>Wed, 05 May 2021 10:22:36 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/learning_vue/</guid>
      <description>Vue实例 1 2 3 4 5 6 7 var vm = new Vue({ el: &amp;#34;#app&amp;#34;, data: { a: 100 } }) el: 对应的元素 data: 数据 Vue实例有很多方法如 $watch: 监控变量，可定义回调函数 1 2 3 vm.$watch(&amp;#39;a&amp;#39;, function(newVal, oldVal){ }) 生命周期 V</description>
    </item>
    
    <item>
      <title>[笔记]Go并发编程实战</title>
      <link>https://ppd0705.github.io/post/go_concurrent_note/</link>
      <pubDate>Wed, 05 May 2021 10:17:59 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/go_concurrent_note/</guid>
      <description>01| Mutex介绍 实现机制 临界区： 一个被共享的资源，或者一个整体的一组共享资源 使用互斥锁，限定临界区只能同时由一个线程持有 同步原语：可以看做解</description>
    </item>
    
    <item>
      <title>Redis自问自答</title>
      <link>https://ppd0705.github.io/post/redis_qa/</link>
      <pubDate>Sun, 27 Dec 2020 18:25:30 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/redis_qa/</guid>
      <description>1. 有哪些数据类型？底层分别使用什么数据结构？ 1 2 3 4 5 6 7 8 type def struct redisObject { // 类型 unsigned type // 编码方式 unsigned encoding // 指向底层数据结构的指针 void *ptr } robj String: int: 底层使用l</description>
    </item>
    
    <item>
      <title>MySQL自问自答</title>
      <link>https://ppd0705.github.io/post/mysql_qa/</link>
      <pubDate>Thu, 24 Dec 2020 11:50:33 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/mysql_qa/</guid>
      <description>1. redo log 和bin log的区别？ binlog属于服务层日志，记录的是SQL的原始逻辑，主要用来归档；而redo log属于InnoDB引擎特有的日</description>
    </item>
    
    <item>
      <title>[笔记]Redis核心技术与实战</title>
      <link>https://ppd0705.github.io/post/redis_core_technologies/</link>
      <pubDate>Mon, 31 Aug 2020 21:34:46 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/redis_core_technologies/</guid>
      <description>第2讲 数据结构： Redis有哪些慢操作 基本数据结构 五种数据类型 String List Hash Set Sorted Set 底层数据结构 全局键值对 桶中的元素都是指向具体值的指针 通过链表解决冲</description>
    </item>
    
    <item>
      <title>[笔记]MySQL实战45讲</title>
      <link>https://ppd0705.github.io/post/mysql_in_action/</link>
      <pubDate>Tue, 25 Aug 2020 21:05:35 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/mysql_in_action/</guid>
      <description>第一讲：一条SQL查询语句的执行过程 MySQL架构 Server层 连接器： 管理连接，权限验证 分析器：词法分析，语法分析 优化器：索引选择，joi</description>
    </item>
    
    <item>
      <title>[笔记]Pydantic</title>
      <link>https://ppd0705.github.io/post/pydantic_note/</link>
      <pubDate>Thu, 23 Jul 2020 08:06:35 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/pydantic_note/</guid>
      <description>简介 pydantic是一个基于type hint 的类型检查库 使用 Model 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from typing import Optional from datetime import datetime from pydantic import BaseModel, Field class User(BaseModel): id:int name:str = &amp;#34;PPD&amp;#34; age: int = None hometown:</description>
    </item>
    
  </channel>
</rss>
