<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PPD&#39;s blog</title>
    <link>https://ppd0705.github.io/</link>
    <description>Recent content on PPD&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 04 Sep 2019 01:10:03 +0800</lastBuildDate>
    
        <atom:link href="https://ppd0705.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MySQL协议初探及pymysql源码节选</title>
      <link>https://ppd0705.github.io/post/mysql_procotol_1/</link>
      <pubDate>Wed, 04 Sep 2019 01:10:03 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/mysql_procotol_1/</guid>
      
        <description>

&lt;h4 id=&#34;登录流程&#34;&gt;登录流程&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;TCP连接建立
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Connection.connection &lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create_connection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connection_timeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setsockopt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IPPROTO_TCP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TCP_NODELAY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;                       
&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setsockopt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SOL_SOCKET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SO_KEEPALIVE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;_rfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_makefile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Server向Client发送Handshake packet：包含server版本信息， 随机挑战数等&lt;/li&gt;
&lt;li&gt;Client与Server发送Auth packet&lt;/li&gt;
&lt;li&gt;Server向Client发送OK packet或者ERR packet
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;认证细节&#34;&gt;认证细节&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;CHAP协议&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;the server sends the random scramble to the client.&lt;/li&gt;
&lt;li&gt;client sends the encrypted password back to the server.&lt;/li&gt;
&lt;li&gt;the server checks the password.
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;客户端加密&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;stage1 = sha1(password)&lt;/li&gt;
&lt;li&gt;crypt = (sha1(scramble + sha1(stage1))) ^ stage1
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;scramble_native_password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# password为明文密码&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# message即random scramble&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;stage1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sha1_new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;digest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;stage2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sha1_new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stage1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;digest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sha1_new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SCRAMBLE_LENGTH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stage2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;digest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_my_crypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stage1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_my_crypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;message2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytearray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;message2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;服务端验证 (基于异或的自反性： A ^ B ^ A = B)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;stage1&amp;rsquo; = crypt ^ (sha1(scramble + mysql.user.password))&lt;/li&gt;
&lt;li&gt;sha1(stage1&amp;rsquo;) == mysql.user.password
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;注：即使mysql.user.password泄露也无法认证，因为不知道stage1&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;服务端数据包&#34;&gt;服务端数据包&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;组成

&lt;ul&gt;
&lt;li&gt;head(4 byte)

&lt;ul&gt;
&lt;li&gt;payload_length (3 byte)&lt;/li&gt;
&lt;li&gt;sequense_id (1 byte)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;payload&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;最大长度（2 ** 24 - 1）,payload等于最大长度时，会拆成多个包，即最后一个包长度总小于最大长度&lt;/li&gt;
&lt;li&gt;head 解析
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Connection._read_packet&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;packet_header&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_read_bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;        
&lt;span class=&#34;n&#34;&gt;btrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;btrh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;packet_number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unpack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;HBB&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;packet_header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;bytes_to_read&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;btrl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;btrh&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
   &lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;注：strucut没有3 byte的类型，故需要分别读H(2 byte)和B(1 byte),然后进行拼接, 小端编码低位在前，所以实际值为 H + B &amp;lt;&amp;lt; 16&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;包的种类：

&lt;ul&gt;
&lt;li&gt;OK: header = 0 and length of packet &amp;gt; 7&lt;/li&gt;
&lt;li&gt;EOF(deprecated since 5.7.5): header = 0xfe and length of packet &amp;lt; 9&lt;/li&gt;
&lt;li&gt;ERROR: header = 0xff&lt;/li&gt;
&lt;li&gt;Result Set: header in [1, 250]
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;客户端数据包&#34;&gt;客户端数据包&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;组成

&lt;ul&gt;
&lt;li&gt;head(4 byte)

&lt;ul&gt;
&lt;li&gt;payload_length (3 byte)&lt;/li&gt;
&lt;li&gt;sequense_id (1 byte)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;payload

&lt;ul&gt;
&lt;li&gt;command(1 byte)&lt;/li&gt;
&lt;li&gt;arguments
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# Connection._execute_command&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;packet_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MAX_PACKET_LEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# +1 is for command&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;prelude&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;iB&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;packet_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;packet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prelude&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;packet_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_write_bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;packet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_next_seq_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;packet_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_PACKET_LEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;packet_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;packet_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MAX_PACKET_LEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write_packet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;packet_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;packet_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;packet_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_PACKET_LEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&#34;cusor&#34;&gt;cusor&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Cursor： 默认curosr&lt;/li&gt;
&lt;li&gt;SSCursor: 不预先将结果一次性全部读入缓存中, 适用于获取大数据时&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;参考&#34;&gt;参考&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/internals/en/sending-more-than-16mbyte.html&#34;&gt;https://dev.mysql.com/doc/internals/en/sending-more-than-16mbyte.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org/dev/peps/pep-0249/#cursor-objects&#34;&gt;https://www.python.org/dev/peps/pep-0249/#cursor-objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jin-yang.github.io/post/mysql-protocol.html&#34;&gt;https://jin-yang.github.io/post/mysql-protocol.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.godpan.me/2017/11/10/mysql-protocol.html&#34;&gt;https://www.godpan.me/2017/11/10/mysql-protocol.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91%E5%BC%82%E6%88%96&#34;&gt;https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91%E5%BC%82%E6%88%96&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/zh-hans/%E8%AF%A2%E9%97%AE%E6%8F%A1%E6%89%8B%E8%AE%A4%E8%AF%81%E5%8D%8F%E8%AE%AE&#34;&gt;https://zh.wikipedia.org/zh-hans/%E8%AF%A2%E9%97%AE%E6%8F%A1%E6%89%8B%E8%AE%A4%E8%AF%81%E5%8D%8F%E8%AE%AE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/1005252&#34;&gt;https://cloud.tencent.com/developer/article/1005252&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Setuptools_doc_notes</title>
      <link>https://ppd0705.github.io/post/setuptools_doc_notes/</link>
      <pubDate>Tue, 20 Aug 2019 08:34:39 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/setuptools_doc_notes/</guid>
      
        <description>

&lt;h4 id=&#34;版本规则&#34;&gt;版本规则&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;正式版本由一串被&lt;code&gt;.&lt;/code&gt;符号分隔开的数据组成&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2.1，代表release 2 的第一个子版本&lt;/li&gt;
&lt;li&gt;2.1 == 2.1.0 == 2.01&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;预发布版本，通常在版本号后加字母tag， 如alpha, a, c, dev&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2.4.c1 = 2.4-c1 = 2.4c1&lt;/li&gt;
&lt;li&gt;c有别名，2.4rc1 =  2.4pre1 = 2.4preview1 = 2.4.c1&lt;/li&gt;
&lt;li&gt;2.4 &amp;gt; 2.4c1 &amp;gt; 2.4b1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;声明部分功能的特殊依赖&#34;&gt;声明部分功能的特殊依赖&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;声明（默认不会下载extras_require里面的依赖）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Project-A&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;extras_require&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;PDF&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ReportLab&amp;gt;=1.2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;RXP&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;reST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;docutils&amp;gt;=0.3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;当前项目引用&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;entry_points&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;console_scripts&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&amp;#39;rst2pdf = project_a.tools.pdfgen [PDF]&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&amp;#39;rst2html = project_a.tools.htmlgen&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# more script entry points ...&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;]}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;其他项目引用&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Project-B&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;install_requires&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Project-A[PDF]&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;下载
&lt;code&gt;pip install &amp;quot;Project-A[PDF]&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;开发模式&#34;&gt;开发模式&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;使用： &lt;code&gt;python setup.py develop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;执行过程：

&lt;ul&gt;
&lt;li&gt;执行egg-info命令&lt;/li&gt;
&lt;li&gt;在site-package目录创建一个.egg-link文件记录当前项目的绝对路径&lt;/li&gt;
&lt;li&gt;site-packages/easy-install.pth记录当前项目的绝对路径(.pth文件的内容会加载到sys.path)&lt;/li&gt;
&lt;li&gt;下载项目依赖&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;等效命令 &lt;code&gt;pip intall -e .&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;安装&#34;&gt;安装&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;python setup.py install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;执行过程

&lt;ul&gt;
&lt;li&gt;执行egg-info命令&lt;/li&gt;
&lt;li&gt;执行build命令&lt;/li&gt;
&lt;li&gt;创建egg(bdist_egg命令，egg和OS、python版本相关)&lt;/li&gt;
&lt;li&gt;解压egg到site-packages目录&lt;/li&gt;
&lt;li&gt;site-packages/easy-install.pth记录egg文件夹的相对路径&lt;/li&gt;
&lt;li&gt;下载项目依赖&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;wheel&#34;&gt;wheel&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;新的发布包格式，the standard for built and binary packaging for Python.&lt;/li&gt;
&lt;li&gt;使用: &lt;code&gt;python setup.py bdist_wheel&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install .&lt;/code&gt; 安装时会构建wheel而非egg&lt;/li&gt;
&lt;li&gt;可以像sdsit一样跨平台&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;参考&#34;&gt;参考&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://setuptools.readthedocs.io/en/latest/&#34;&gt;https://setuptools.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pythonwheels.com/&#34;&gt;https://pythonwheels.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://packaging.python.org/discussions/wheel-vs-egg/&#34;&gt;https://packaging.python.org/discussions/wheel-vs-egg/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/library/site.html#module-site&#34;&gt;https://docs.python.org/3/library/site.html#module-site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java_basic_3</title>
      <link>https://ppd0705.github.io/post/java_basic_3/</link>
      <pubDate>Wed, 31 Jul 2019 22:32:54 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/java_basic_3/</guid>
      
        <description>

&lt;h4 id=&#34;异常&#34;&gt;异常&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;异常类继承自Throwable, 分为Eroor和Exception两类&lt;/li&gt;
&lt;li&gt;Error是无需捕获的严重异常&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Exception分为RuntimeExceptin和非RuntimeExcetion, 非RuntimeExcetion强制用try &amp;hellip; catch捕获&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;抛出异常用throw new Exception()&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;assert断言：JVM默认不开启，建议只用于调试&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;日志输出&#34;&gt;日志输出&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;自带java.util.logging模块， 默认INFO级别&lt;/li&gt;
&lt;li&gt;第三方日志接口模块Commons Logging，默认用Log4j， 找不到则使用标准库， 可用log.error(String, Throwable)打印异常&lt;/li&gt;
&lt;li&gt;第三方日志系统Log4j，可通过四种Appender(console, file, socket, jbdc)将日志输出到不同的地方&lt;/li&gt;
&lt;li&gt;SLF4J和Logback可以取代Commons Logging和Log4j，使用‘{}’占位符取代用‘+’对字符串拼接&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java_basic_2</title>
      <link>https://ppd0705.github.io/post/java_basic_2/</link>
      <pubDate>Mon, 29 Jul 2019 21:53:34 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/java_basic_2/</guid>
      
        <description>

&lt;h4 id=&#34;string&#34;&gt;String&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;不可变&lt;/li&gt;
&lt;li&gt;使用Unicode编码表示&lt;/li&gt;
&lt;li&gt;早期JDK以char[]存储，新版本用byte[]&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;stringbuilder&#34;&gt;StringBuilder&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;可变对象，新增字符时，不会创建新的临时对象&lt;/li&gt;
&lt;li&gt;append方法返回this，故可以链式调用&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;stringjoiner&#34;&gt;StringJoiner&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用于分隔符拼接数据&lt;/li&gt;
&lt;li&gt;底层使用的仍是StringBuilder&lt;/li&gt;
&lt;li&gt;无需指定开头结尾时可用String.join()方法&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;包装类型&#34;&gt;包装类型&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;基本类型的封装，可赋值为null&lt;/li&gt;
&lt;li&gt;编译器可Auto Boxing自动封箱(如 Integer n = 100 -&amp;gt; Integer n = Integer.valueOf(100))、Auto Unboxing自动拆箱(如 int x = n -&amp;gt; int x = n.intValue())&lt;/li&gt;
&lt;li&gt;为不可变类型&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;javabean&#34;&gt;JavaBean&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;符合命名规范的class, 通过getter和setter来读写属性&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;enum枚举&#34;&gt;enum枚举&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;继承自Enum, static final类型，无法被继承，无法new&lt;/li&gt;
&lt;li&gt;.ordinal()返回定义顺序&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;常用工具类&#34;&gt;常用工具类&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Math 提供数学方法&lt;/li&gt;
&lt;li&gt;Random 伪随机数&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java_basic_1</title>
      <link>https://ppd0705.github.io/post/java_basic_1/</link>
      <pubDate>Sat, 27 Jul 2019 21:49:48 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/java_basic_1/</guid>
      
        <description>

&lt;hr /&gt;

&lt;h5 id=&#34;碎碎念-最近总算给自己打气开始了解java语言-以下均来自廖雪峰java教程的笔记&#34;&gt;碎碎念： 最近总算给自己打气开始了解Java语言。以下均来自廖雪峰Java教程的笔记&lt;/h5&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;基本单位为class&#34;&gt;基本单位为class&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;通常大写字母开头&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;基本变量类型&#34;&gt;基本变量类型&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;整数： byte, short, int, long&lt;/li&gt;
&lt;li&gt;浮点数： float, double&lt;/li&gt;
&lt;li&gt;字符类型： char&lt;/li&gt;
&lt;li&gt;布尔类型: boolean&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;常量&#34;&gt;常量&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;定义变量时加finnal修饰符&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;var关键字&#34;&gt;var关键字&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;var sb = new StringBuilder() 等价于 StringBuilder sb = new StringBuilder()&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;字符串类型&#34;&gt;字符串类型&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;字符串是个引用类型&lt;/li&gt;
&lt;li&gt;使用+连接任意字符串和其他数据类型&lt;/li&gt;
&lt;li&gt;空值为null&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;数据&#34;&gt;数据&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;有默认值，整型是0，浮点型是0.0，布尔型是false&lt;/li&gt;
&lt;li&gt;空间大小不可变，长度用.length 获取&lt;/li&gt;
&lt;li&gt;初始化指定值： int[] ns = { 68, 79, 91, 85, 62 }&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;判断是否相等&#34;&gt;判断是否相等&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;引用类型 == 判断是否指向同一个对象， .equals 判断值是否相等，null.equals会报错NullPointerException&lt;/li&gt;
&lt;li&gt;浮点数a,b 用Math.abs(a-b) &amp;lt; tolerence判断相等&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;类的构造&#34;&gt;类的构造&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;构造方法名称和类名相同&lt;/li&gt;
&lt;li&gt;未定义时，编译器自动创建一个无参数的构造方法&lt;/li&gt;
&lt;li&gt;可以定义多个参数方法，编译器根据参数自动判断&lt;/li&gt;
&lt;li&gt;一个构造方法可以调用另一个构造方法，以便代码复用&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;类的方法重载-overload&#34;&gt;类的方法重载（overload）&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;方法名相同，但参数不同&lt;/li&gt;
&lt;li&gt;功能相似&lt;/li&gt;
&lt;li&gt;返回类型应相同&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;类的继承&#34;&gt;类的继承&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;关键字extends&lt;/li&gt;
&lt;li&gt;最基础的类Object&lt;/li&gt;
&lt;li&gt;一个类有且只有一个父类,除了没有父类的Object之外&lt;/li&gt;
&lt;li&gt;private -&amp;gt; protected 可使属性让子类可访问&lt;/li&gt;
&lt;li&gt;实例化类时，会先实例化父类即调用super()&lt;/li&gt;
&lt;li&gt;upcasting向上转型： ParentClass p = new ChildrenClass()&lt;/li&gt;
&lt;li&gt;downcasting向下转型： ChildrenClass c = (ChildrenClass) p&lt;/li&gt;
&lt;li&gt;判断类型 instanceof: c instanceof ParentClass&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;类的多态&#34;&gt;类的多态&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;概念： 针对某个类的方法调用，其真正执行的方法取决于运行时期对应的实际类&lt;/li&gt;
&lt;li&gt;Override覆写：与父类方法名相同，且参数和返回类型也相同。 可使用@Override显示声明&lt;/li&gt;
&lt;li&gt;final

&lt;ul&gt;
&lt;li&gt;final修饰的方法可以阻止被覆写&lt;/li&gt;
&lt;li&gt;final修饰的class可以阻止被继承&lt;/li&gt;
&lt;li&gt;final修饰的field必须在创建对象时初始化，随后不可修改
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;类的抽象&#34;&gt;类的抽象&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用abstract声明，用于定义接口规范&lt;/li&gt;
&lt;li&gt;抽象类不可实例化&lt;/li&gt;
&lt;li&gt;抽象方法必须被子类覆写&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;接口&#34;&gt;接口&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用interface声明， 类似于一个没有字段，都是抽象方法的抽象类&lt;/li&gt;
&lt;li&gt;所有方法默认为 public abstract&lt;/li&gt;
&lt;li&gt;接口用extends声明继承接口&lt;/li&gt;
&lt;li&gt;具体的类用implements声明实现接口&lt;/li&gt;
&lt;li&gt;一个类可以实现多个接口&lt;/li&gt;
&lt;li&gt;default方法不需要被覆写&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;静态字段&#34;&gt;静态字段&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用static声明，所有实例共享，推荐用 &lt;code&gt;类&lt;/code&gt;.&lt;code&gt;字段&lt;/code&gt;调用&lt;/li&gt;
&lt;li&gt;接口可以定义静态字段，为public static final类型&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;静态方法&#34;&gt;静态方法&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用static声明，所有实例共享，只能访问静态字段，不能访问this，常用于工具函数&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;包&#34;&gt;包&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;声明： 文件首行 package 路径&lt;/li&gt;
&lt;li&gt;导入： import path.Class&lt;/li&gt;
&lt;li&gt;简单类名查找顺序：当前package -&amp;gt; 导入的package -&amp;gt; java.lang&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;作用域&#34;&gt;作用域&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;包作用域是指一个类允许访问同一个package的没有public、private修饰的class，以及没有public、protected、private修饰的字段和方法&lt;/li&gt;
&lt;li&gt;如果不确定是否需要public，就不声明为public&lt;/li&gt;
&lt;li&gt;一个.java文件只能包含一个public类，但可以包含多个非public类&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>First</title>
      <link>https://ppd0705.github.io/post/first/</link>
      <pubDate>Fri, 28 Jun 2019 22:14:50 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/post/first/</guid>
      
        <description>&lt;p&gt;写东西一直就是我不擅长的事情&lt;br /&gt;
语文作文800字总是觉得凑不够&lt;br /&gt;
那就开始写吧&lt;br /&gt;
毕竟我也没有什么擅长的&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>About</title>
      <link>https://ppd0705.github.io/about/</link>
      <pubDate>Fri, 28 Jun 2019 22:01:49 +0800</pubDate>
      
      <guid>https://ppd0705.github.io/about/</guid>
      
        <description>&lt;p&gt;湖南人&lt;br /&gt;
生于1992&lt;br /&gt;
合肥屯溪路男子职业技术学校打铁专业毕业&lt;br /&gt;
在常州第一大流水线工厂画了近2年图&lt;br /&gt;
又跌跌撞撞在深圳开始当起了码农&lt;br /&gt;
世界太大我太渺小&lt;br /&gt;
就做个饥饿的傻子吧&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
